NAME: frontend
LAST DEPLOYED: Fri Jan 26 05:20:01 2024
NAMESPACE: s5michel
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: s5michel-espresso-shop-web3/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "frontend-s5michel-espresso-shop-web3-test-connection"
  labels:
    helm.sh/chart: s5michel-espresso-shop-web3-0.1.0
    app.kubernetes.io/name: s5michel-espresso-shop-web3
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['frontend-s5michel-espresso-shop-web3:8090']
  restartPolicy: Never
MANIFEST:
---
# Source: s5michel-espresso-shop-web3/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: my-app
---
# Source: s5michel-espresso-shop-web3/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-s5michel-espresso-shop-web3
  labels:
    helm.sh/chart: s5michel-espresso-shop-web3-0.1.0
    app.kubernetes.io/name: s5michel-espresso-shop-web3
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: s5michel-espresso-shop-web3/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: s5michel-espresso-shop-web
  labels:
   app:  s5michel-espresso-shop-web
spec:
  type: NodePort
  ports:
    - port: 8090
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: s5michel-espresso-shop-web3
    app.kubernetes.io/instance: frontend
---
# Source: s5michel-espresso-shop-web3/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-s5michel-espresso-shop-web3
  labels:
    helm.sh/chart: s5michel-espresso-shop-web3-0.1.0
    app.kubernetes.io/name: s5michel-espresso-shop-web3
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: s5michel-espresso-shop-web3
      app.kubernetes.io/instance: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: s5michel-espresso-shop-web3
        app.kubernetes.io/instance: frontend
    spec:
      serviceAccountName: frontend-s5michel-espresso-shop-web3
      securityContext:
        {}
      containers:
        - name: s5michel-espresso-shop-web3
          securityContext:
            {}
          image: "nginx:1.16.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}

NOTES:
1. Get the application URL by running these commands:
  export NODE_PORT=$(kubectl get --namespace s5michel -o jsonpath="{.spec.ports[0].nodePort}" services frontend-s5michel-espresso-shop-web3)
  export NODE_IP=$(kubectl get nodes --namespace s5michel -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
